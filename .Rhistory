library(shiny)
runApp()
runApp()
runApp()
runApp()
runApp()
library(shiny)
library(manipulate)
shinyServer(
function(input,output){
manipulate(plot(1:x),x=slider(1,100))
})
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(shiny)
library(manipulate)
shinyServer(
function(input,output){
angRad = (input$angulo*pi)/180
t <- 2*input$v0*sin(angRad)/9.8
output$new <- renderPlot(
manipulate(plot(1:input$angulo)))
})
runAPP()
runApp()
b
b
b
b
library(shiny)
shinyUI(pageWithSidebar(
headerPanel("Parabolic Motion"),
sidebarPanel(
textInput(inputId="V0",label="Velocidad Inicial"),
sliderInput("angulo","Angulo de salida",value=0,min=0,max=90,step=1,)
),
mainPanel(plotOutput("new"))
))
library(shiny)
library(manipulate)
shinyServer(
function(input,output){
g = 9.8
angRad = (input$angulo*pi)/180
t <- 2*input$v0*sin(angRad)/g
H <- ((input$v0**2)*(sin(angRad)**2))/2*g
L <- ((input$v0**2)*(sin(angRad*2)))/g
output$new <- renderPlot(
manipulate(plot(1:H)))
})
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(shiny)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.package('debtools')
install.packages('debtools')
install.packages('devtools')
devtools::install_github('rstudio/shinyapps')
library(shinyapps)
deployApp()
shinyapps::setAccountInfo(name='alephsur', token='9F53B358E125AC2FB9B21E9C93121061', secret='XYM9LscK1rt1fie5QSxY6B4XIl2VC2eJhSOas3ad')
deployApp()
runApp()
deployApp()
